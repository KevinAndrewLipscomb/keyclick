<?
//
// $Id: analyze.phtml 7093 2020-05-01 01:00:11Z kevinanlipscomb $
//
//
// Emulate register_globals on
if (!ini_get('register_globals'))
  {
  $superglobals = array($_SERVER,$_ENV,$_FILES,$_COOKIE,$_POST,$_GET);
  if (isset($_SESSION))
    {
    array_unshift($superglobals, $_SESSION);
    }
  foreach ($superglobals as $superglobal)
    {
    extract($superglobal, EXTR_SKIP);
    }
  }
//
// Assign incoming arguments to themselves to prevent 'uninitialized variable' warnings later.
//
$bpn = $bpn;
$filename = $filename;
$format = $format;
$parent_enumeral = $parent_enumeral;
$algorithm = $algorithm;
//
if (isset($search_text)) $search_text = kix\k::Safe($search_text,kix\k::PhpValueOf_safe_hint_type("PUNCTUATED"));
//
require_once("f_bodyopen.phtml");
require_once("f_roleemailaddress.phtml");
require_once("f_bevalidboardingpass.phtml");
require_once("f_kickoff.phtml");
require_once("f_zipdump.phtml");
//
$ini = AppSettings();
$db_link = DbLink($ini);
$dbkalipso_link = DbkalipsoLink($ini);
//
if (isset($sql_query)) $sql_query = str_replace('oscardotnetdb',$ini[db][oscardotnet],kix\k::StringOfShieldedValue($sql_query));
//
// error_reporting(E_ALL);  // Inappropriate because we're calling externally-authored routines.
//
           $agency = BeValidBoardingPass($db_link,$bpn);
           if ($agency == "")
              {
              KickOff();
              }
           else
              {
              switch ($format)
                 {
                 case "":
                 case "html":
                    echo "<html>\n"
                       . "   <head><title>KEYclick - Query result</title></head>\n"
                       . "   ";
                    BodyOpen();
                    echo "      <table border=0 cellpadding=0 cellspacing=0 width=80% align=center>\n"
                       . "         <tr>\n"
                       . "            <td>\n"
                       . "               <table>\n"
                       . "                  <tr>\n"
                       . "                     <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n"
                       . "                     <td>\n"
                       . "                        ";
                    PutLibPhotoRandomPlaced($ini,$dbkalipso_link,"eye-candy",1);
                    echo "                     </td>\n"
                       . "                     <td>\n"
                       . "                        <h6 align=center>\n"
                       . "                           <a href=\"javascript:close();\">KEYCLICK SYSTEM</a>\n"
                       . "                        </h6>\n"
                       . "                        <h1 align=center>Query result</h1>\n"
                       . "                     </td>\n"
                       . "                  </tr>\n"
                       . "               </table>\n"
                       . "               <hr>\n"
                       . "               <br>\n";
                    require_once("f_readdump.phtml");
                    require_once("f_readdump-rodbyaddr0.phtml");
                    require_once("f_readdump-rodbynam0.phtml");
                    require_once("f_readdump-popnamcnt.phtml");
                    require_once("f_readdump-rodfolup0.phtml");
                    //
                    switch ($format)
                       {
                       case "":
                          switch ($algorithm)
                             {
                             case "POPNAMCNT":
                                ReadDump_POPNAMCNT
                                   (
                                   $db_link,
                                   $agency
                                   );
                                break;
                             case "RODBYADDR0":
                                ReadDump_RODBYADDR0
                                   (
                                   $db_link,
                                   $agency
                                   );
                                break;
                             case "RODBYNAM0":
                                ReadDump_RODBYNAM0
                                   (
                                   $db_link,
                                   $agency
                                   );
                                break;
                             case "RODFOLUP0":
                                ReadDump_RODFOLUP0
                                   (
                                   $db_link,
                                   $year_num,$month_num,$day_num,
                                   $agency
                                   );
                                break;
                             default:
                               ReadDump
                                   (
                                   $db_link,
                                   $sql_query,
                                   $bpn,
                                   '1',  // for allow_dynamic_sorting
                                   'FALSE'  // for be_viewable_result
                                   );
                                break;
                             }
                          echo "<p>The analysis nicknamed '<b>$parent_enumeral</b>' is complete.</p>\n"
                             . "<p><b>Next</b>, KEYclick will let you view or download the results of this analysis.</p>\n"
                             . "<form action=form-analyze.phtml method=post>\n"
                             . "   <input type=hidden name=bpn value=$bpn>\n"
                             . "   <input type=hidden name=parent_enumeral_expression value=\"parent_enumeral=$parent_enumeral\">\n"
                             . "   Click here to &nbsp; <input type=submit value=Proceed>.\n"
                             . "</form>\n";
                          break;
                       case "html":
                          //
                          // Get $chunk_size.
                          //
                          extract  // Implicitly sets $chunk_size
                             (
                             mysqli_fetch_array
                                (
                                $db_link->query
                                   (
                                   "select value as chunk_size from tuning_parm "
                                   .  "where name='screen-view-chunk-size' "
                                   )
                                )
                             );
                          //
                          switch ($algorithm)
                             {
                             case "RODBYADDR0":
                                ReadDump_RODBYADDR0($db_link,$agency);
                                break;
                             case "RODBYNAM0":
                                ReadDump_RODBYNAM0($db_link,$agency);
                                break;
                             case "RODBYADDRSV":
                                $sql_query = "select * from rod_by_addr "
                                   . "limit " . ($part_num - 1)*$chunk_size . ",$chunk_size";
                                ReadDump
                                   (
                                   $db_link,
                                   $sql_query,
                                   $bpn,
                                   '0'  // don't allow_dynamic_sorting
                                   );
                                break;
                             case "RODBYNAMSV":
                                $sql_query = "select * from rod_by_name "
                                   . "limit " . ($part_num - 1)*$chunk_size . ",$chunk_size";
                                ReadDump
                                   (
                                   $db_link,
                                   $sql_query,
                                   $bpn,
                                   '0'  // don't allow_dynamic_sorting
                                   );
                                break;
                            case "FNDNAMADR":
                                //
                                // Replace spaces and stars with the regexp wildcard character.
                                //
                                $parsed_basic_criteria = strtolower(preg_replace("/[[:space:]]+/", " ",$search_text));
                                $parsed_basic_criteria = preg_replace("/\*/"," ",$parsed_basic_criteria);
                                $parsed_basic_criteria = preg_replace("/ /",".*",$parsed_basic_criteria);
                                //
                                $sql_query = "select resident_base.id "
                                   . " , resident_base.name "
                                   . " , concat(house_num,' ',street.name) as address1 "
                                   . " , city.name as city "
                                   . " , state.abbreviation as state "
                                   . " , null as zip "
                                   . " from resident_base "
                                   .   " join street on (street.id=resident_base.street_id) "
                                   .   " join city on (city.id=street.city_id) "
                                   .   " join state on (state.id=city.state_id) "
                                   . " where"
                                   .   " ("
                                   .     " resident_base.name rlike '$parsed_basic_criteria' "
                                   .   " or"
                                   .     " concat(house_num,' ',street.name) rlike '$parsed_basic_criteria' "
                                   .   " )"
                                   . " and"
                                   .   " agency = '$agency'";
                                //
                                // DON'T break
                                //
                             default:
                               ReadDump
                                   (
                                   $db_link,
                                   $sql_query,
                                   $bpn,
                                   '1',  // do allow_dynamic_sorting
                                   'TRUE', // for be_viewable_result
                                   (isset($be_drill_down_available) ? $be_drill_down_available : 'TRUE') // for be_drilldown_available
                                   );
                                break;
                             }
                          break;
                       }
                    echo "               <br>\n"
                       . "               <p><small><small><em><pre>\$Id: analyze.phtml 7093 2020-05-01 01:00:11Z kevinanlipscomb $</pre></em></small></small>\n"
                       . "            </td>\n"
                       . "         </tr>\n"
                       . "      </table>\n"
                       . "   </body>\n"
                       . "</html>\n";
                    break;
                    //
                 case "zip":
                 default:
                   ZipDump($db_link,$sql_query,$bpn,$parent_enumeral);
                   break;
                 }
              }
?>