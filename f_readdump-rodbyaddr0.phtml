<?
//
// $Id$
//
function ReadDump_RODBYADDR0
   (
   $sql_query,
   $bpn,
   $mode = ""
   )
{
//
// Get the chunk size.
//
extract(
   mysql_fetch_array(
      mysql_query("select value as chunk_size from " . $mode . "tuning_parm where name='rodbyaddr0-chunk-size'")));
//
$statement_array = array();
$statement_array[$i = 0] = "drop table if exists " . $mode . "rod_by_addr";
$statement_array[++$i] = "drop table if exists " . $mode . "temp_by_addr";
$statement_array[++$i] = "CREATE TABLE " . $mode . "temp_by_addr "
   . "("
   . "id mediumint(8) unsigned NOT NULL default '0',"
   . "name tinytext NOT NULL,"
   . "address1 tinytext NOT NULL,"
   . "city tinytext NOT NULL,"
   . "state tinytext NOT NULL,"
   . "zip tinytext NOT NULL,"
   . "agency enum('KVRS') NOT NULL default 'KVRS',"
   . "PRIMARY KEY (id),"
   . "KEY name (name(255))"
   . ")"
   . "TYPE=MyISAM";
//special-2010-a-{
//$statement_array[++$i] = "INSERT ignore INTO " . $mode . "temp_by_addr SELECT id"
$statement_array[++$i] = "INSERT ignore INTO " . $mode . "temp_by_addr SELECT id_accidental_2010_a as id"
//
   . " , name"
   . " , address1"
   . " , city"
   . " , state"
   . " , zip"
   . " , agency"
   . " FROM " . $mode . "resident";
$statement_array[++$i] = "ALTER TABLE " . $mode . "temp_by_addr DROP agency";
$statement_array[++$i] = "ALTER TABLE " . $mode . "temp_by_addr ADD COLUMN numb varchar(8) AFTER address1";
$statement_array[++$i] = "ALTER TABLE " . $mode . "temp_by_addr ADD COLUMN street varchar(72) AFTER numb";
$statement_array[++$i] = "update " . $mode . "temp_by_addr "
   . "set numb=left(address1,(locate(space(1),address1) - 1)) "
   . "   , street=substring(address1,(locate(space(1),address1) + 1))";
$statement_array[++$i] = "ALTER TABLE " . $mode . "temp_by_addr DROP address1";
$statement_array[++$i] = "CREATE TABLE " . $mode . "rod_by_addr "
   . "select * from " . $mode . "temp_by_addr "
   . "order by state,city,street,numb "
   . "limit 0,$chunk_size";
//
$num_statements = count($statement_array);
//
// Execute each statement in the statement array.
//
for ($i = 0; $i < $num_statements; $i++)
   {
   mysql_query($statement_array[$i]) or die("Query [$statement_array[$i]] failed with error: " . mysql_error());
   }
//
// Figure out how many rows are in the intermediate table.
//
$result = mysql_query("select count(*) as num_temp_rows from " . $mode . "temp_by_addr")
   or die("Count failed with error: " . mysql_error());
extract(mysql_fetch_array($result));  // Sets $num_temp_rows.
//
// Repeatedly reduce the size of the problem by removing rows from the intermediate table that have already been
// transferred to the target table.  Then transfer some more.
//
for ($i = 0; $i < $num_temp_rows; $i += $chunk_size)
   {
   $result = mysql_query("select id from " . $mode . "rod_by_addr limit $i,$chunk_size")
      or die("Selection of IDs newly-inserted into target table failed with error: " . mysql_error());
   $id_list = "";
   while ($row = mysql_fetch_array($result))
      {
      extract($row);  // Sets $id.
      $id_list .= "$id,";
      }
   $id_list .= $id;  // Logically unnecessary, but a cheap cheat to make the string syntactically correct.
   //
   mysql_query("delete from " . $mode . "temp_by_addr where id in ($id_list)")
      or die("Scattered delete failed with error: " . mysql_error() . " id_list=$id_list");
   //
   mysql_query
      (
      "insert into " . $mode . "rod_by_addr "
      . "select * from " . $mode . "temp_by_addr "
      . "order by state,city,street,numb "
      . "limit $chunk_size"
      )
      or die("Ordered insert failed at virtual offset " . ($i + $chunk_size) . " with error: " . mysql_error());
   }
mysql_query("drop table " . $mode . "temp_by_addr") or die("Drop of temp table failed with error: " . mysql_error());
}
?>